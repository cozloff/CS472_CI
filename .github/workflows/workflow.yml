name: CI workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9-slim

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests with nose
        run: |
          nosetests -v --with-spec --spec-color --with-coverage --cover-package=app

      - name: Static Code Analysis
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Security Vulnerability Scanning
        run: |
          pip install snyk
          snyk test --all-projects

      - name: Generate Documentation
        run: |
          pip install sphinx
          sphinx-apidoc -o docs/source/ src/
          sphinx-build -b html docs/source/ docs/build/html

      - name: Build and Push Docker Image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker build -t myapp:${{ github.sha }} .
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push myapp:${{ github.sha }}

      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Test Reports
          path: ./path/to/test-reports
